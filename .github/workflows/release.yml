name: Image Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "dev"
      - "feature/*"
      - "feat/*"
    tags:
      - "v**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: fierylion/postgres_postgis_pgvector
  BUILDKIT: 1
 

jobs:

  release-docker-image:
    name: build and push oci image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Docker Builds
        uses: docker/setup-buildx-action@v2

      - name: Login to Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push hash tagged image
        id: build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            COMMIT_SHORT_SHA=${{ github.sha }}
            COMMIT_BRANCH=${{ github.ref_name }}
            COMMIT_MESSAGE=${{ github.event.head_commit.message }}
            COMMIT_AUTHOR=${{ github.event.head_commit.author.name }}
            COMMIT_TIMESTAMP=${{ github.event.head_commit.timestamp }}
            BUILD_DATE=${{ github.event.repository.updated_at }}

